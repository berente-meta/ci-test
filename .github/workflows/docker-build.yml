name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "docs/**"

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/liferay-connector

jobs:
  validate-secrets:
    name: Validate Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Check Docker Hub secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
              echo "❌ Error: DOCKER_USERNAME secret is not set or is empty"
              exit 1
          fi

          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
              echo "❌ Error: DOCKER_PASSWORD secret is not set or is empty"
              exit 1
          fi

          echo "✅ Docker Hub secrets are properly configured"

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: validate-secrets
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Output image info
        run: |
          echo "✅ Successfully built and pushed Docker image"
          echo "Image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
